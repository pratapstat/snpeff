/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.mcgill.mcb.pcingola.snpSql.gui;

import ca.mcgill.mcb.pcingola.fileIterator.VcfFileIterator;
import ca.mcgill.mcb.pcingola.snpSql.SnpSqlCmdCreate;
import ca.mcgill.mcb.pcingola.util.Gpr;
import ca.mcgill.mcb.pcingola.vcf.VcfEntry;
import java.io.File;
import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pcingola
 */
public class SnpSqlGui extends javax.swing.JFrame {

    static  final int TABLE_ROWS = 1000;
    static final String TABLE_TITLE[] = {"CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO"};
    
    String vcfFileName;
    
    /**
     * Creates new form SnpSqlGui
     */
    public SnpSqlGui() {
        initComponents();
        jButtonQuery.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButtonQuery = new javax.swing.JButton();
        jComboBoxVar = new javax.swing.JComboBox();
        jComboBoxOp = new javax.swing.JComboBox();
        jTextFieldValue = new javax.swing.JTextField();
        jComboBoxVar1 = new javax.swing.JComboBox();
        jComboBoxOp1 = new javax.swing.JComboBox();
        jTextFieldValue1 = new javax.swing.JTextField();
        jComboBoxRel1 = new javax.swing.JComboBox();
        jComboBoxRel2 = new javax.swing.JComboBox();
        jComboBoxVar2 = new javax.swing.JComboBox();
        jComboBoxOp2 = new javax.swing.JComboBox();
        jTextFieldValue2 = new javax.swing.JTextField();
        jComboBoxRel3 = new javax.swing.JComboBox();
        jComboBoxVar3 = new javax.swing.JComboBox();
        jComboBoxOp3 = new javax.swing.JComboBox();
        jTextFieldValue3 = new javax.swing.JTextField();
        jComboBoxRel4 = new javax.swing.JComboBox();
        jComboBoxVar4 = new javax.swing.JComboBox();
        jComboBoxOp4 = new javax.swing.JComboBox();
        jTextFieldValue4 = new javax.swing.JTextField();
        jComboBoxRel5 = new javax.swing.JComboBox();
        jComboBoxVar5 = new javax.swing.JComboBox();
        jComboBoxOp5 = new javax.swing.JComboBox();
        jTextFieldValue5 = new javax.swing.JTextField();
        jComboBoxRel6 = new javax.swing.JComboBox();
        jComboBoxVar6 = new javax.swing.JComboBox();
        jComboBoxOp6 = new javax.swing.JComboBox();
        jTextFieldValue6 = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SnpSql");
        setPreferredSize(new java.awt.Dimension(800, 800));

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setResizeWeight(0.5);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO", "..."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jSplitPane1.setBottomComponent(jScrollPane1);

        jButtonQuery.setText("Query");
        jButtonQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQueryActionPerformed(evt);
            }
        });

        jComboBoxVar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO" }));

        jComboBoxOp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "=", "!=", "<", "<=", ">", ">=", "LIKE", " " }));

        jComboBoxVar1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO" }));

        jComboBoxOp1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "=", "!=", "<", "<=", ">", ">=", "LIKE", " " }));

        jComboBoxRel1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "AND", "OR" }));

        jComboBoxRel2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "AND", "OR" }));

        jComboBoxVar2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO" }));

        jComboBoxOp2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "=", "!=", "<", "<=", ">", ">=", "LIKE", " " }));

        jComboBoxRel3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "AND", "OR" }));

        jComboBoxVar3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO" }));

        jComboBoxOp3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "=", "!=", "<", "<=", ">", ">=", "LIKE", " " }));

        jComboBoxRel4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "AND", "OR" }));

        jComboBoxVar4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO" }));

        jComboBoxOp4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "=", "!=", "<", "<=", ">", ">=", "LIKE", " " }));

        jComboBoxRel5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "AND", "OR" }));

        jComboBoxVar5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO" }));

        jComboBoxOp5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "=", "!=", "<", "<=", ">", ">=", "LIKE", " " }));

        jComboBoxRel6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "AND", "OR" }));

        jComboBoxVar6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "CHROM", "POS", "ID", "REF", "ALT", "QUAL", "FILTER", "INFO" }));

        jComboBoxOp6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---", "=", "!=", "<", "<=", ">", ">=", "LIKE", " " }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonQuery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBoxRel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxVar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxOp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBoxVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldValue)
                            .addComponent(jTextFieldValue1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBoxRel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxVar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxOp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldValue2, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBoxRel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxVar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxOp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldValue3, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBoxRel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxVar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxOp4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldValue4, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBoxRel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxVar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxOp5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldValue5, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBoxRel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxVar6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxOp6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldValue6, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxVar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxOp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldValue1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxVar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxOp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldValue2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxVar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxOp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldValue3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxVar4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxOp4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldValue4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxVar5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxOp5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldValue5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxVar6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxOp6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldValue6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonQuery)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jButtonQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQueryActionPerformed
        Gpr.debug("Query database!");
    }//GEN-LAST:event_jButtonQueryActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        Gpr.debug("Open menu!");
        
        // Open file chooser
        final JFileChooser fc = new JFileChooser();
        
        // Only allow VCF files
        FileFilter fileFilter = new FileFilter() {

            @Override
            public boolean accept(File file) {
                if(file.isDirectory())return true;
                int extIdx = file.getName().lastIndexOf('.');
                if( extIdx<0 ) return false;
                String ext = file.getName().substring(extIdx);
                return ext.toLowerCase().equals(".vcf");
            }

            @Override
            public String getDescription() {
                return "VCF file";
            }
        };
        
        fc.addChoosableFileFilter(fileFilter);
        fc.setFileFilter(fileFilter);

        // Show file chooser dialog
        int returnVal = fc.showOpenDialog(this);
        
        // Pressed "OK"?
        if( returnVal == 0 ) {
            vcfFileName = fc.getSelectedFile().getAbsolutePath();
            openFile();
            jButtonQuery.setEnabled(true);
        }        
    }//GEN-LAST:event_openMenuItemActionPerformed

    /**
     * Open a VCF file.
     * Build database if required
     */
    void openFile() {
    	createDatabase();
        readVcfFile();
    }
    
    /**
     * Create database
     */
    void createDatabase () {
        String dbDataFileName = vcfFileName + ".data";
        File dbFile = new File(dbDataFileName);
        if( ! dbFile.exists() ) {
            Gpr.debug("NO DATA FILE: " + dbDataFileName);
            
             int result = JOptionPane.showConfirmDialog(this, "Database not found!\nPress OK to build databse for this file", "Need to build database", JOptionPane.OK_CANCEL_OPTION);
             if( result == JOptionPane.OK_OPTION ) {
                 // OK, try to build database
                Gpr.debug("Build database for: " + vcfFileName);                
                boolean ok = createDatabaseWorker();
                if( ok ) {
                     JOptionPane.showMessageDialog(this, "Database built succesfully", "Database build", JOptionPane.INFORMATION_MESSAGE);
                } else {
                     JOptionPane.showMessageDialog(this, "Error building database", "Error", JOptionPane.ERROR_MESSAGE);
                     vcfFileName = null;
                }
             } else vcfFileName = null;
        }
        Gpr.debug("VCF FILE: " + vcfFileName);
    }

    /**
     * Worked that creates database in background
     * @return 
     */
    boolean createDatabaseWorker() {
        JOptionPane messagePane = new JOptionPane("Creaint database\n Please wait...", JOptionPane.INFORMATION_MESSAGE);
        final JDialog dialog = messagePane.createDialog(this, "Building databse");
        
        SwingWorker sw = new SwingWorker<Boolean, Void>() {

         @Override
         protected Boolean doInBackground() throws Exception {
             try {
                 SnpSqlCmdCreate sscreate = new SnpSqlCmdCreate();
                 return sscreate.run(vcfFileName);
             } catch( Throwable t ) {
                 t.printStackTrace();
             }
             return false;
         }

         // this is called when background thread above has completed.
         protected void done() { dialog.dispose(); };
        };
        sw.execute();

        // Show dialog while executing worker
        dialog.setVisible(true);

        boolean ok = true;
        try{
        Gpr.debug("GET: " + sw.get() + "\t" + sw.get().getClass().getCanonicalName());}catch(Exception e){;}
        
        return ok;
    }
    
    /**
     * Read VCF file and show it in table
     */
    void readVcfFile() {
        // Update table
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(TABLE_TITLE);
        
        int rowCount=0;
        if( vcfFileName != null ) {
            VcfFileIterator vfi = new VcfFileIterator(vcfFileName);
            for( VcfEntry ve : vfi) {
                String data[] = new String[8];
                data[0] = ve.getChromosomeName();
                data[1] = "" + (ve.getStart() + 1);
                data[2] = ve.getId();
                data[3] = ve.getRef();
                data[4] = ve.getAltsStr();
                data[5] = ve.getQuality() + "";
                data[6] = ve.getFilterPass();
                data[7] = ve.getInfoStr();
                model.addRow(data);
                
                if( rowCount++ >= TABLE_ROWS )   break;
            }
        }

        // Show 'truncatd" warning
        String data[] = new String[8];
        for(int i=0;i< data.length; i++)data[i]="Only first " + TABLE_ROWS + " rows are shown";
            model.addRow(data);

        jTable1.setModel(model);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SnpSqlGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SnpSqlGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SnpSqlGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SnpSqlGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SnpSqlGui().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton jButtonQuery;
    private javax.swing.JComboBox jComboBoxOp;
    private javax.swing.JComboBox jComboBoxOp1;
    private javax.swing.JComboBox jComboBoxOp2;
    private javax.swing.JComboBox jComboBoxOp3;
    private javax.swing.JComboBox jComboBoxOp4;
    private javax.swing.JComboBox jComboBoxOp5;
    private javax.swing.JComboBox jComboBoxOp6;
    private javax.swing.JComboBox jComboBoxRel1;
    private javax.swing.JComboBox jComboBoxRel2;
    private javax.swing.JComboBox jComboBoxRel3;
    private javax.swing.JComboBox jComboBoxRel4;
    private javax.swing.JComboBox jComboBoxRel5;
    private javax.swing.JComboBox jComboBoxRel6;
    private javax.swing.JComboBox jComboBoxVar;
    private javax.swing.JComboBox jComboBoxVar1;
    private javax.swing.JComboBox jComboBoxVar2;
    private javax.swing.JComboBox jComboBoxVar3;
    private javax.swing.JComboBox jComboBoxVar4;
    private javax.swing.JComboBox jComboBoxVar5;
    private javax.swing.JComboBox jComboBoxVar6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldValue;
    private javax.swing.JTextField jTextFieldValue1;
    private javax.swing.JTextField jTextFieldValue2;
    private javax.swing.JTextField jTextFieldValue3;
    private javax.swing.JTextField jTextFieldValue4;
    private javax.swing.JTextField jTextFieldValue5;
    private javax.swing.JTextField jTextFieldValue6;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    // End of variables declaration//GEN-END:variables

    JComboBox vars[] = {jComboBoxVar, jComboBoxVar1, jComboBoxVar2, jComboBoxVar3, jComboBoxVar4, jComboBoxVar5, jComboBoxVar6 };
    JTextField vals[] = {jTextFieldValue, jTextFieldValue1, jTextFieldValue2, jTextFieldValue3, jTextFieldValue4, jTextFieldValue5, jTextFieldValue6 };
    JComboBox rel[] = {null, jComboBoxRel1, jComboBoxRel2, jComboBoxRel3, jComboBoxRel4, jComboBoxRel5, jComboBoxRel6 };

}
